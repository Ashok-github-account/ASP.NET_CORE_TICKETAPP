apiVersion: v1
kind: Service
metadata:
  name: svc-globoticket-services-eventcatalog
  labels:
    version: dev
    product: globoticket-services-eventcatalog
spec:
  selector:
    app: globoticket-services-eventcatalog
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-globoticket-services-eventcatalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: globoticket-services-eventcatalog
  template:
    metadata:
      labels:
        app: globoticket-services-eventcatalog
    spec:
      containers:
      - name: globoticket-services-eventcatalog
        image: globoticket.azurecr.io/globoticket.services.eventcatalog:101
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: ASPNETCORE_URLS
          value: http://+:80
        - name: ConnectionStrings__DefaultConnection
          valueFrom: 
            secretKeyRef:
              name: eventcatalog-db
              key: connectionstring
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
            # length of time to wait for a pod to initialize
            # after pod startup, before applying health checking
          initialDelaySeconds: 30
          timeoutSeconds: 1
          successThreshold: 5
        livenessProbe:
          httpGet:
            path: /health/live
            port: 80
            # we start probing after 3 seconds
            # we allow 5x to fail, before we restart the pod
            # can take up to 15 seconds to restart the pod, since we probe every 3 seconds.
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          limits:
            cpu: "0.10"
      imagePullSecrets:
        - name: pullkey