name: globoticket.web

on:
  push:
    branches: [ containarized_aks_allup ]
    paths:
    - '.github/workflows/globoticket.web.yaml'
    - 'GloboTicket/GloboTicket.Client/**'
    - 'GloboTicket/aks-globoticket.web.yaml'
  pull_request:
    branches: [ containarized_aks_allup ]
    paths:
    - '.github/workflows/globoticket.web.yaml'
    - 'GloboTicket/GloboTicket.Client/**'
    - 'GloboTicket/aks-globoticket.web.yaml'

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      imageRepository: 'globoticket.web'
      containerRegistry: 'globoticketacr.azurecr.io'
      dockerfilePath: 'GloboTicket/GloboTicket.Client/Dockerfile'
      deploymentFile: 'aks-globoticket.web.yaml'
      trivyVersion: 0.12.0
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.containerRegistry }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_TOKEN }}
    
    - name: Build an image from Dockerfile
      run: |
        docker build -t ${{env.containerRegistry}}/${{env.imageRepository}}:${{github.run_number}} -f ${{env.dockerfilePath}} ${{github.workspace}}/GloboTicket
  
    - name: install trivy scanning
      run: |
        sudo apt-get install rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v${{env.trivyVersion}}/trivy_${{env.trivyVersion}}_Linux-64bit.deb
        sudo dpkg -i trivy_${{env.trivyVersion}}_Linux-64bit.deb
        trivy -v

    - name: Run container scanner for known vulnerabilities
      run: |
            trivy image --exit-code 0 --severity LOW,MEDIUM -f template --template '{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"Trivy","fullName":"TrivyVulnerabilityScanner","rules":[{{-$t_first:=true}}{{-range.}}{{-range.Vulnerabilities-}}{{-if$t_first-}}{{-$t_first=false-}}{{else-}},{{-end}}{"id":"[{{.Vulnerability.Severity}}]{{.VulnerabilityID}}","name":"dockerfile_scan","shortDescription":{"text":{{printf"%vPackage:%v".VulnerabilityID.PkgName|printf"%q"}}},"fullDescription":{"text":{{endWithPeriod(escapeString.Title)|printf"%q"}}},"help":{"text":{{printf"Vulnerability%v\nSeverity:%v\nPackage:%v\nInstalledVersion:%v\nFixedVersion:%v\nLink:[%v](https://nvd.nist.gov/vuln/detail/%v)".VulnerabilityID.Vulnerability.Severity.PkgName.InstalledVersion.FixedVersion.VulnerabilityID(.VulnerabilityID|toLower)|printf"%q"}},"markdown":{{printf"**Vulnerability%v**\n|Severity|Package|InstalledVersion|FixedVersion|Link|\n|---|---|---|---|---|\n|%v|%v|%v|%v|[%v](https://nvd.nist.gov/vuln/detail/%v)|\n".VulnerabilityID.Vulnerability.Severity.PkgName.InstalledVersion.FixedVersion.VulnerabilityID(.VulnerabilityID|toLower)|printf"%q"}}},"properties":{"tags":["vulnerability","{{.Vulnerability.Severity}}",{{.PkgName|printf"%q"}}],"precision":"very-high"}}{{-end-}}{{-end-}}]}},"results":[{{-$t_first:=true}}{{-range.}}{{-range$index,$vulnerability:=.Vulnerabilities-}}{{-if$t_first-}}{{-$t_first=false-}}{{else-}},{{-end}}{"ruleId":"[{{$vulnerability.Vulnerability.Severity}}]{{$vulnerability.VulnerabilityID}}","ruleIndex":{{$index}},"level":"error","message":{"text":{{endWithPeriod(escapeString$vulnerability.Description)|printf"%q"}}},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":1}}}]}{{-end-}}{{-end-}}],"columnKind":"utf16CodeUnits"}]}' --output="sarif-lm.test" ${{env.containerRegistry}}/${{env.imageRepository}}:${{github.run_number}}
            trivy image --exit-code 1 --severity HIGH,CRITICAL -f template --template '{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"Trivy","fullName":"TrivyVulnerabilityScanner","rules":[{{-$t_first:=true}}{{-range.}}{{-range.Vulnerabilities-}}{{-if$t_first-}}{{-$t_first=false-}}{{else-}},{{-end}}{"id":"[{{.Vulnerability.Severity}}]{{.VulnerabilityID}}","name":"dockerfile_scan","shortDescription":{"text":{{printf"%vPackage:%v".VulnerabilityID.PkgName|printf"%q"}}},"fullDescription":{"text":{{endWithPeriod(escapeString.Title)|printf"%q"}}},"help":{"text":{{printf"Vulnerability%v\nSeverity:%v\nPackage:%v\nInstalledVersion:%v\nFixedVersion:%v\nLink:[%v](https://nvd.nist.gov/vuln/detail/%v)".VulnerabilityID.Vulnerability.Severity.PkgName.InstalledVersion.FixedVersion.VulnerabilityID(.VulnerabilityID|toLower)|printf"%q"}},"markdown":{{printf"**Vulnerability%v**\n|Severity|Package|InstalledVersion|FixedVersion|Link|\n|---|---|---|---|---|\n|%v|%v|%v|%v|[%v](https://nvd.nist.gov/vuln/detail/%v)|\n".VulnerabilityID.Vulnerability.Severity.PkgName.InstalledVersion.FixedVersion.VulnerabilityID(.VulnerabilityID|toLower)|printf"%q"}}},"properties":{"tags":["vulnerability","{{.Vulnerability.Severity}}",{{.PkgName|printf"%q"}}],"precision":"very-high"}}{{-end-}}{{-end-}}]}},"results":[{{-$t_first:=true}}{{-range.}}{{-range$index,$vulnerability:=.Vulnerabilities-}}{{-if$t_first-}}{{-$t_first=false-}}{{else-}},{{-end}}{"ruleId":"[{{$vulnerability.Vulnerability.Severity}}]{{$vulnerability.VulnerabilityID}}","ruleIndex":{{$index}},"level":"error","message":{"text":{{endWithPeriod(escapeString$vulnerability.Description)|printf"%q"}}},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":1}}}]}{{-end-}}{{-end-}}],"columnKind":"utf16CodeUnits"}]}' --output="sarif-hc.test" ${{env.containerRegistry}}/${{env.imageRepository}}:${{github.run_number}}

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'sarif-lm.test'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'sarif-hc.test'
    
    - name: Push image to ACR
      run: |
        docker push ${{env.containerRegistry}}/${{env.imageRepository}}:${{github.run_number}}
    
    - name: Replace tokens
      uses: cschleiden/replace-tokens@v1.0
      with:
        files: ${{github.workspace}}/GloboTicket/${{env.deploymentFile}}
      env: 
        Build.BuildId: ${{github.run_number}}
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{secrets.KUBECONFIG}} 
      id: setcontext
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
            ${{github.workspace}}/GloboTicket/${{env.deploymentFile}}
